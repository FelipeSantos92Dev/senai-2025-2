// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Turma {
  id        String  @id @default(cuid())
  nome      String
  semestre  String
  ano       Int
  descricao String?
  cor       String? // Para personalizar a cor do card

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos
  unidadesCurriculares UnidadeCurricular[]

  @@map("turmas")
}

model UnidadeCurricular {
  id           String  @id @default(cuid())
  nome         String
  codigo       String? // Ex: "MAT001", "POR102"
  descricao    String?
  cargaHoraria Int?
  professor    String?
  cor          String? // Para personalizar a cor do card
  ordem        Int     @default(0) // Para ordenar as UCs na tela

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos
  turmaId String
  turma   Turma  @relation(fields: [turmaId], references: [id], onDelete: Cascade)
  aulas   Aula[]

  @@map("unidades_curriculares")
}

model Aula {
  id            String     @id @default(cuid())
  titulo        String
  resumo        String?
  dataAula      DateTime
  status        StatusAula @default(PLANEJADA)
  duracao       Int? // em minutos
  assunto       String
  objetivos     String? // Objetivos da aula
  materialApoio String? // Links ou descrição de materiais
  observacoes   String?
  ordem         Int        @default(0) // Para ordenar as aulas
  slug          String? // Para páginas estáticas específicas

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relacionamentos
  unidadeCurricularId String
  unidadeCurricular   UnidadeCurricular @relation(fields: [unidadeCurricularId], references: [id], onDelete: Cascade)

  @@map("aulas")
}

enum StatusAula {
  PLANEJADA
  EM_ANDAMENTO
  CONCLUIDA
  CANCELADA
  ADIADA
}
